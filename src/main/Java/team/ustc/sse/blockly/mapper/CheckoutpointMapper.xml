<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.ustc.sse.blockly.mapper.CheckoutpointMapper" >
  <resultMap id="BaseResultMap" type="team.ustc.sse.blockly.entity.Checkoutpoint" >
    <id column="studentID" property="studentid" jdbcType="INTEGER" />
    <id column="checkpointID" property="checkpointid" jdbcType="INTEGER" />
    <result column="toalTime" property="toaltime" jdbcType="INTEGER" />
    <result column="program" property="program" jdbcType="VARCHAR" />
    <result column="saveTime" property="savetime" jdbcType="TIMESTAMP" />
    <result column="isSuccess" property="issuccess" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    studentID, checkpointID, toalTime, program, saveTime, isSuccess
  </sql>


  <select id="getIsSuccessByStudentID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    checkpointID,saveTime,isSuccess,toalTime
    from checkoutpoint
    where studentID = #{studentid,jdbcType=INTEGER}
  </select>


  <select id="selectByExample" resultMap="BaseResultMap" parameterType="team.ustc.sse.blockly.entity.CheckoutpointExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checkoutpoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="team.ustc.sse.blockly.entity.CheckoutpointKey" >
    select 
    <include refid="Base_Column_List" />
    from checkoutpoint
    where studentID = #{studentid,jdbcType=INTEGER}
      and checkpointID = #{checkpointid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="team.ustc.sse.blockly.entity.CheckoutpointKey" >
    delete from checkoutpoint
    where studentID = #{studentid,jdbcType=INTEGER}
      and checkpointID = #{checkpointid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.ustc.sse.blockly.entity.CheckoutpointExample" >
    delete from checkoutpoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.ustc.sse.blockly.entity.Checkoutpoint" >
    insert into checkoutpoint (studentID, checkpointID, toalTime, 
      program, saveTime, isSuccess
      )
    values (#{studentid,jdbcType=INTEGER}, #{checkpointid,jdbcType=INTEGER}, #{toaltime,jdbcType=INTEGER}, 
      #{program,jdbcType=VARCHAR}, #{savetime,jdbcType=TIMESTAMP}, #{issuccess,jdbcType=INTEGER}
      )
      ON DUPLICATE KEY UPDATE
        toaltime = toaltime + #{toaltime,jdbcType=INTEGER},program=#{program,jdbcType=VARCHAR},
        savetime = #{savetime,jdbcType=TIMESTAMP}, issuccess = #{issuccess,jdbcType=INTEGER}
  </insert>
  <insert id="insertSelective" parameterType="team.ustc.sse.blockly.entity.Checkoutpoint" >
    insert into checkoutpoint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentID,
      </if>
      <if test="checkpointid != null" >
        checkpointID,
      </if>
      <if test="toaltime != null" >
        toalTime,
      </if>
      <if test="program != null" >
        program,
      </if>
      <if test="savetime != null" >
        saveTime,
      </if>
      <if test="issuccess != null" >
        isSuccess,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="checkpointid != null" >
        #{checkpointid,jdbcType=INTEGER},
      </if>
      <if test="toaltime != null" >
        #{toaltime,jdbcType=INTEGER},
      </if>
      <if test="program != null" >
        #{program,jdbcType=VARCHAR},
      </if>
      <if test="savetime != null" >
        #{savetime,jdbcType=TIMESTAMP},
      </if>
      <if test="issuccess != null" >
        #{issuccess,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.ustc.sse.blockly.entity.CheckoutpointExample" resultType="java.lang.Integer" >
    select count(*) from checkoutpoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update checkoutpoint
    <set >
      <if test="record.studentid != null" >
        studentID = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.checkpointid != null" >
        checkpointID = #{record.checkpointid,jdbcType=INTEGER},
      </if>
      <if test="record.toaltime != null" >
        toalTime = #{record.toaltime,jdbcType=INTEGER},
      </if>
      <if test="record.program != null" >
        program = #{record.program,jdbcType=VARCHAR},
      </if>
      <if test="record.savetime != null" >
        saveTime = #{record.savetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.issuccess != null" >
        isSuccess = #{record.issuccess,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update checkoutpoint
    set studentID = #{record.studentid,jdbcType=INTEGER},
      checkpointID = #{record.checkpointid,jdbcType=INTEGER},
      toalTime = #{record.toaltime,jdbcType=INTEGER},
      program = #{record.program,jdbcType=VARCHAR},
      saveTime = #{record.savetime,jdbcType=TIMESTAMP},
      isSuccess = #{record.issuccess,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.ustc.sse.blockly.entity.Checkoutpoint" >
    update checkoutpoint
    <set >
      <if test="toaltime != null" >
        toalTime = #{toaltime,jdbcType=INTEGER},
      </if>
      <if test="program != null" >
        program = #{program,jdbcType=VARCHAR},
      </if>
      <if test="savetime != null" >
        saveTime = #{savetime,jdbcType=TIMESTAMP},
      </if>
      <if test="issuccess != null" >
        isSuccess = #{issuccess,jdbcType=INTEGER},
      </if>
    </set>
    where studentID = #{studentid,jdbcType=INTEGER}
      and checkpointID = #{checkpointid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.ustc.sse.blockly.entity.Checkoutpoint" >
    update checkoutpoint
    set toalTime = #{toaltime,jdbcType=INTEGER},
      program = #{program,jdbcType=VARCHAR},
      saveTime = #{savetime,jdbcType=TIMESTAMP},
      isSuccess = #{issuccess,jdbcType=INTEGER}
    where studentID = #{studentid,jdbcType=INTEGER}
      and checkpointID = #{checkpointid,jdbcType=INTEGER}
  </update>
</mapper>