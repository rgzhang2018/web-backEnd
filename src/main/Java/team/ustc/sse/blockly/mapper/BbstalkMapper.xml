<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.ustc.sse.blockly.mapper.BbstalkMapper" >
  <resultMap id="BaseResultMap" type="team.ustc.sse.blockly.entity.Bbstalk" >
    <id column="talkID" property="talkid" jdbcType="INTEGER" />
    <result column="studentID" property="studentid" jdbcType="INTEGER" />
    <result column="bbsID" property="bbsid" jdbcType="INTEGER" />
    <result column="talkTo" property="talkto" jdbcType="INTEGER" />
    <result column="likeCount" property="likecount" jdbcType="INTEGER" />
    <result column="BBSTalkMessage" property="bbstalkmessage" jdbcType="VARCHAR" />
    <result column="bbstalkTime" property="bbstalktime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    talkID, studentID, bbsID, talkTo, likeCount, BBSTalkMessage, bbstalkTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="team.ustc.sse.blockly.entity.BbstalkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bbstalk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bbstalk
    where talkID = #{talkid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bbstalk
    where talkID = #{talkid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.ustc.sse.blockly.entity.BbstalkExample" >
    delete from bbstalk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.ustc.sse.blockly.entity.Bbstalk" >
    <selectKey resultType="java.lang.Integer" keyProperty="talkid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbstalk (studentID, bbsID, talkTo, 
      likeCount, BBSTalkMessage, bbstalkTime
      )
    values (#{studentid,jdbcType=INTEGER}, #{bbsid,jdbcType=INTEGER}, #{talkto,jdbcType=INTEGER}, 
      #{likecount,jdbcType=INTEGER}, #{bbstalkmessage,jdbcType=VARCHAR}, #{bbstalktime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="team.ustc.sse.blockly.entity.Bbstalk" >
    <selectKey resultType="java.lang.Integer" keyProperty="talkid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bbstalk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentID,
      </if>
      <if test="bbsid != null" >
        bbsID,
      </if>
      <if test="talkto != null" >
        talkTo,
      </if>
      <if test="likecount != null" >
        likeCount,
      </if>
      <if test="bbstalkmessage != null" >
        BBSTalkMessage,
      </if>
      <if test="bbstalktime != null" >
        bbstalkTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="bbsid != null" >
        #{bbsid,jdbcType=INTEGER},
      </if>
      <if test="talkto != null" >
        #{talkto,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="bbstalkmessage != null" >
        #{bbstalkmessage,jdbcType=VARCHAR},
      </if>
      <if test="bbstalktime != null" >
        #{bbstalktime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.ustc.sse.blockly.entity.BbstalkExample" resultType="java.lang.Integer" >
    select count(*) from bbstalk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bbstalk
    <set >
      <if test="record.talkid != null" >
        talkID = #{record.talkid,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null" >
        studentID = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.bbsid != null" >
        bbsID = #{record.bbsid,jdbcType=INTEGER},
      </if>
      <if test="record.talkto != null" >
        talkTo = #{record.talkto,jdbcType=INTEGER},
      </if>
      <if test="record.likecount != null" >
        likeCount = #{record.likecount,jdbcType=INTEGER},
      </if>
      <if test="record.bbstalkmessage != null" >
        BBSTalkMessage = #{record.bbstalkmessage,jdbcType=VARCHAR},
      </if>
      <if test="record.bbstalktime != null" >
        bbstalkTime = #{record.bbstalktime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bbstalk
    set talkID = #{record.talkid,jdbcType=INTEGER},
      studentID = #{record.studentid,jdbcType=INTEGER},
      bbsID = #{record.bbsid,jdbcType=INTEGER},
      talkTo = #{record.talkto,jdbcType=INTEGER},
      likeCount = #{record.likecount,jdbcType=INTEGER},
      BBSTalkMessage = #{record.bbstalkmessage,jdbcType=VARCHAR},
      bbstalkTime = #{record.bbstalktime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.ustc.sse.blockly.entity.Bbstalk" >
    update bbstalk
    <set >
      <if test="studentid != null" >
        studentID = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="bbsid != null" >
        bbsID = #{bbsid,jdbcType=INTEGER},
      </if>
      <if test="talkto != null" >
        talkTo = #{talkto,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="bbstalkmessage != null" >
        BBSTalkMessage = #{bbstalkmessage,jdbcType=VARCHAR},
      </if>
      <if test="bbstalktime != null" >
        bbstalkTime = #{bbstalktime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where talkID = #{talkid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.ustc.sse.blockly.entity.Bbstalk" >
    update bbstalk
    set studentID = #{studentid,jdbcType=INTEGER},
      bbsID = #{bbsid,jdbcType=INTEGER},
      talkTo = #{talkto,jdbcType=INTEGER},
      likeCount = #{likecount,jdbcType=INTEGER},
      BBSTalkMessage = #{bbstalkmessage,jdbcType=VARCHAR},
      bbstalkTime = #{bbstalktime,jdbcType=TIMESTAMP}
    where talkID = #{talkid,jdbcType=INTEGER}
  </update>
</mapper>